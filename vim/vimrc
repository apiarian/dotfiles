source ~/.vim/packages.vim

let g:deoplete#enable_at_startup = 1

set nocompatible

" all the plugin detection and stuff
filetype plugin indent on

" enable syntax in terminals which can display colors
if has('syntax') && (&t_Co > 2)
	syntax enable
	colorscheme solarized
	set background=dark
endif

" command line completion
set wildmode=list:longest,full
set wildignorecase

" where are we?
set showmode
set showcmd

" indentation controls
set shiftwidth=2
set tabstop=2
set softtabstop=2
set noexpandtab
set shiftround
set autoindent
set smartindent

" don't reformat text automatically
set formatoptions-=t

set textwidth=79

" spelling
set spelllang=en_us

" reload files edited externally automatically
set autoread

" highlight search stuff
set hlsearch

" hidden buffers hang around
set hidden

" let embedded terminals know that they're embedded
let $VIMTERM = '(vim)'

" start with all folds open
set foldlevelstart=100

" split in the right direction
set splitbelow
set splitright

" break long things
set linebreak

" completion
set completeopt=longest,menuone

"
" handy bindings
"

" space to insert a character
nmap <Space> i_<Esc>r

" Y to yank to the end of the line from the cursor
map Y y%

" let backspace span lines
set backspace=2

" better movement
nnoremap j gj
nnoremap k gk
vnoremap j gj
vnoremap k gk
inoremap <Down> <C-o>gj
inoremap <Up> <C-o>gk

" jump around windows
 nnoremap <Right> <C-w>l
 nnoremap <Left> <C-w>h
 nnoremap <Up> <C-w>k
 nnoremap <Down> <C-w>j

" move lines
nmap mj ddp
nmap mk dd<Up>P
nmap mJ ddGp
nmap mK ddggP

" search next and center
nnoremap n nzz
nnoremap N Nzz

" quick escape
inoremap jk <Esc>

"
" interface improvements
"

" vertically resize window when it's just one line high, toggles between
" fullscreen windows
function! ToggleWindowSize()
	if winheight(0) == 1
		resize
	endif
	if winwidth(0) == 1
		vertical resize
	endif
endfunction
autocmd WinEnter * :call ToggleWindowSize()

" status line
set laststatus=2
set statusline=%F%m%r%{fugitive#statusline()}%h%w\%=%y[L:\%l\ C:\%c\ A:\%b\ H:\x%02B\ P:\%p%%]

" show invisibles

set list
set listchars=tab:▸\ ,eol:¬

set colorcolumn=81

" line numbers
function! NumberToggle()
	if(&relativenumber == 1)
		set norelativenumber
	else
		set relativenumber
	endif
endfunc
nnoremap <C-n> :call NumberToggle()<cr>

" switch color setup
noremap <silent> <Leader>bd :set background=dark<CR>
noremap <silent> <Leader>bl :set background=light<CR>

"
" custom settings for some file types
"

" human text files
autocmd BufNewFile,BufRead *.txt set filetype=human
autocmd FileType mail,human set formatoptions+=t  textwidth=72 spell
autocmd FileType human setlocal foldmethod=expr
autocmd FileType human setlocal foldexpr=(getline(v:lnum)=~'^$')?-1:((indent(v:lnum)<indent(v:lnum+1))?('>'.indent(v:lnum+1)):indent(v:lnum))
autocmd FileType human set foldtext=getline(v:foldstart)
autocmd FileType human set fillchars=fold:\ 

" makefiles
autocmd FileType make set noexpandtab shiftwidth=8

" markdown
autocmd BufNewFile,BufRead *.markdown set filetype=markdown
autocmd FileType markdown set formatoptions=tcroqn2 comments=n:&gt; ai textwidth=80 spell
let g:markdown_fold_style = 'nested'

"
" Set gvim stuff
" 

if has("gui_running")
	if has("gui_macvim")
		:set guifont=Andale\ Mono:h14
		colorscheme solarized
		set background=dark
		set guioptions-=r
		set guioptions-=R
		set guioptions-=b
		set guioptions-=l
		set guioptions-=L
	endif
endif
